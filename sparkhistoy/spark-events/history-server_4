{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":4,"description":"count at <console>:68","details":"org.apache.spark.sql.Dataset.count(Dataset.scala:2769)\n$line41.$read$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$liftedTree1$1$1.apply(<console>:68)\n$line41.$read$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$liftedTree1$1$1.apply(<console>:67)\nscala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24)\nscala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24)\nscala.concurrent.impl.ExecutionContextImpl$AdaptedForkJoinTask.exec(ExecutionContextImpl.scala:121)\nscala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)\nscala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)\nscala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)\nscala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)","physicalPlanDescription":"== Parsed Logical Plan ==\nAggregate [count(1) AS count#4806L]\n+- LogicalRDD [race_duration#4631, hc#4632, rn#4633, type#4634, wt#4635, r1#4636, n_r1#4637, d_r1#4638, r2#4639, n_r2#4640, d_r2#4641, r3#4642, n_r3#4643, d_r3#4644, r4#4645, n_r4#4646, d_r4#4647, r5#4648, n_r5#4649, d_r5#4650, r6#4651, n_r6#4652, d_r6#4653, r7#4654, ... 34 more fields], false\n\n== Analyzed Logical Plan ==\ncount: bigint\nAggregate [count(1) AS count#4806L]\n+- LogicalRDD [race_duration#4631, hc#4632, rn#4633, type#4634, wt#4635, r1#4636, n_r1#4637, d_r1#4638, r2#4639, n_r2#4640, d_r2#4641, r3#4642, n_r3#4643, d_r3#4644, r4#4645, n_r4#4646, d_r4#4647, r5#4648, n_r5#4649, d_r5#4650, r6#4651, n_r6#4652, d_r6#4653, r7#4654, ... 34 more fields], false\n\n== Optimized Logical Plan ==\nAggregate [count(1) AS count#4806L]\n+- Project\n   +- LogicalRDD [race_duration#4631, hc#4632, rn#4633, type#4634, wt#4635, r1#4636, n_r1#4637, d_r1#4638, r2#4639, n_r2#4640, d_r2#4641, r3#4642, n_r3#4643, d_r3#4644, r4#4645, n_r4#4646, d_r4#4647, r5#4648, n_r5#4649, d_r5#4650, r6#4651, n_r6#4652, d_r6#4653, r7#4654, ... 34 more fields], false\n\n== Physical Plan ==\n*(2) HashAggregate(keys=[], functions=[count(1)], output=[count#4806L])\n+- Exchange SinglePartition\n   +- *(1) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#4809L])\n      +- *(1) Project\n         +- Scan ExistingRDD[race_duration#4631,hc#4632,rn#4633,type#4634,wt#4635,r1#4636,n_r1#4637,d_r1#4638,r2#4639,n_r2#4640,d_r2#4641,r3#4642,n_r3#4643,d_r3#4644,r4#4645,n_r4#4646,d_r4#4647,r5#4648,n_r5#4649,d_r5#4650,r6#4651,n_r6#4652,d_r6#4653,r7#4654,... 34 more fields]","sparkPlanInfo":{"nodeName":"WholeStageCodegen","simpleString":"WholeStageCodegen","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition","children":[{"nodeName":"WholeStageCodegen","simpleString":"WholeStageCodegen","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1)])","children":[{"nodeName":"Project","simpleString":"Project","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"ExistingRDD","simpleString":"Scan ExistingRDD[race_duration#4631,hc#4632,rn#4633,type#4634,wt#4635,r1#4636,n_r1#4637,d_r1#4638,r2#4639,n_r2#4640,d_r2#4641,r3#4642,n_r3#4643,d_r3#4644,r4#4645,n_r4#4646,d_r4#4647,r5#4648,n_r5#4649,d_r5#4650,r6#4651,n_r6#4652,d_r6#4653,r7#4654,... 34 more fields]","children":[],"metrics":[{"name":"number of output rows","accumulatorId":742,"metricType":"sum"}]}],"metrics":[]}],"metrics":[]}],"metrics":[{"name":"spill size total (min, med, max)","accumulatorId":739,"metricType":"size"},{"name":"aggregate time total (min, med, max)","accumulatorId":740,"metricType":"timing"},{"name":"peak memory total (min, med, max)","accumulatorId":738,"metricType":"size"},{"name":"number of output rows","accumulatorId":737,"metricType":"sum"},{"name":"avg hash probe (min, med, max)","accumulatorId":741,"metricType":"average"}]}],"metrics":[{"name":"duration total (min, med, max)","accumulatorId":736,"metricType":"timing"}]}],"metrics":[{"name":"data size total (min, med, max)","accumulatorId":729,"metricType":"size"}]}],"metrics":[]}],"metrics":[{"name":"spill size total (min, med, max)","accumulatorId":733,"metricType":"size"},{"name":"aggregate time total (min, med, max)","accumulatorId":734,"metricType":"timing"},{"name":"peak memory total (min, med, max)","accumulatorId":732,"metricType":"size"},{"name":"number of output rows","accumulatorId":731,"metricType":"sum"},{"name":"avg hash probe (min, med, max)","accumulatorId":735,"metricType":"average"}]}],"metrics":[{"name":"duration total (min, med, max)","accumulatorId":730,"metricType":"timing"}]}}
