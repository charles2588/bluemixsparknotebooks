{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":2}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":3,"description":"take at VectorIndexer.scala:145","details":"org.apache.spark.sql.Dataset.take(Dataset.scala:2698)\norg.apache.spark.ml.feature.VectorIndexer.fit(VectorIndexer.scala:145)\ncom.ibm.analytics.wml.features.DecodableNumericIndexer.fit(DecodableNumericIndexer.scala:53)\ncom.ibm.analytics.wml.features.DecodableNumericIndexer.fit(DecodableNumericIndexer.scala:30)\ncom.ibm.analytics.wml.features.LabelEncoder.fit(LabelEncoder.scala:85)\ncom.ibm.analytics.wml.features.LabelEncoder.fit(LabelEncoder.scala:62)\norg.apache.spark.ml.Pipeline$$anonfun$fit$2.apply(Pipeline.scala:153)\norg.apache.spark.ml.Pipeline$$anonfun$fit$2.apply(Pipeline.scala:149)\nscala.collection.Iterator$class.foreach(Iterator.scala:893)\nscala.collection.AbstractIterator.foreach(Iterator.scala:1336)\nscala.collection.IterableViewLike$Transformed$class.foreach(IterableViewLike.scala:44)\nscala.collection.SeqViewLike$AbstractTransformed.foreach(SeqViewLike.scala:37)\norg.apache.spark.ml.Pipeline.fit(Pipeline.scala:149)\ncom.ibm.analytics.wml.features.ADP.fit(ADP.scala:243)\ncom.ibm.analytics.wml.features.ADP.fit(ADP.scala:151)\norg.apache.spark.ml.Estimator.fit(Estimator.scala:61)\ncom.ibm.analytics.wml.pipeline.spark.computations.EstimatorInPipeline.apply(EstimatorInPipeline.scala:18)\ncom.ibm.analytics.wml.pipeline.spark.computations.EstimatorInPipeline.apply(EstimatorInPipeline.scala:11)\ncom.ibm.analytics.wml.pipeline.flow.Flow$class.nodeOutput(flow.scala:440)\ncom.ibm.analytics.wml.pipeline.spark.MLPipeline.nodeOutput(MLPipeline.scala:85)","physicalPlanDescription":"== Parsed Logical Plan ==\nGlobalLimit 1\n+- LocalLimit 1\n   +- AnalysisBarrier\n         +- Project [va__3a92496ad831#1313]\n            +- Project [win#1208, UDF(named_struct(win_double_vecAssembler_989d34906d1c, cast(win#1208 as double))) AS va__3a92496ad831#1313]\n               +- Project [win#1208]\n                  +- LogicalRDD [race_duration#1158, hc#1159, rn#1160, type#1161, wt#1162, r1#1163, n_r1#1164, d_r1#1165, r2#1166, n_r2#1167, d_r2#1168, r3#1169, n_r3#1170, d_r3#1171, r4#1172, n_r4#1173, d_r4#1174, r5#1175, n_r5#1176, d_r5#1177, r6#1178, n_r6#1179, d_r6#1180, r7#1181, ... 27 more fields], false\n\n== Analyzed Logical Plan ==\nva__3a92496ad831: vector\nGlobalLimit 1\n+- LocalLimit 1\n   +- Project [va__3a92496ad831#1313]\n      +- Project [win#1208, UDF(named_struct(win_double_vecAssembler_989d34906d1c, cast(win#1208 as double))) AS va__3a92496ad831#1313]\n         +- Project [win#1208]\n            +- LogicalRDD [race_duration#1158, hc#1159, rn#1160, type#1161, wt#1162, r1#1163, n_r1#1164, d_r1#1165, r2#1166, n_r2#1167, d_r2#1168, r3#1169, n_r3#1170, d_r3#1171, r4#1172, n_r4#1173, d_r4#1174, r5#1175, n_r5#1176, d_r5#1177, r6#1178, n_r6#1179, d_r6#1180, r7#1181, ... 27 more fields], false\n\n== Optimized Logical Plan ==\nGlobalLimit 1\n+- LocalLimit 1\n   +- Project [UDF(named_struct(win_double_vecAssembler_989d34906d1c, cast(win#1208 as double))) AS va__3a92496ad831#1313]\n      +- LogicalRDD [race_duration#1158, hc#1159, rn#1160, type#1161, wt#1162, r1#1163, n_r1#1164, d_r1#1165, r2#1166, n_r2#1167, d_r2#1168, r3#1169, n_r3#1170, d_r3#1171, r4#1172, n_r4#1173, d_r4#1174, r5#1175, n_r5#1176, d_r5#1177, r6#1178, n_r6#1179, d_r6#1180, r7#1181, ... 27 more fields], false\n\n== Physical Plan ==\nCollectLimit 1\n+- *(1) LocalLimit 1\n   +- *(1) Project [UDF(named_struct(win_double_vecAssembler_989d34906d1c, cast(win#1208 as double))) AS va__3a92496ad831#1313]\n      +- Scan ExistingRDD[race_duration#1158,hc#1159,rn#1160,type#1161,wt#1162,r1#1163,n_r1#1164,d_r1#1165,r2#1166,n_r2#1167,d_r2#1168,r3#1169,n_r3#1170,d_r3#1171,r4#1172,n_r4#1173,d_r4#1174,r5#1175,n_r5#1176,d_r5#1177,r6#1178,n_r6#1179,d_r6#1180,r7#1181,... 27 more fields]","sparkPlanInfo":{"nodeName":"CollectLimit","simpleString":"CollectLimit 1","children":[{"nodeName":"WholeStageCodegen","simpleString":"WholeStageCodegen","children":[{"nodeName":"LocalLimit","simpleString":"LocalLimit 1","children":[{"nodeName":"Project","simpleString":"Project [UDF(named_struct(win_double_vecAssembler_989d34906d1c, cast(win#1208 as double))) AS va__3a92496ad831#1313]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"ExistingRDD","simpleString":"Scan ExistingRDD[race_duration#1158,hc#1159,rn#1160,type#1161,wt#1162,r1#1163,n_r1#1164,d_r1#1165,r2#1166,n_r2#1167,d_r2#1168,r3#1169,n_r3#1170,d_r3#1171,r4#1172,n_r4#1173,d_r4#1174,r5#1175,n_r5#1176,d_r5#1177,r6#1178,n_r6#1179,d_r6#1180,r7#1181,... 27 more fields]","children":[],"metrics":[{"name":"number of output rows","accumulatorId":193,"metricType":"sum"}]}],"metrics":[]}],"metrics":[]}],"metrics":[]}],"metrics":[{"name":"duration total (min, med, max)","accumulatorId":192,"metricType":"timing"}]}],"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":3}
